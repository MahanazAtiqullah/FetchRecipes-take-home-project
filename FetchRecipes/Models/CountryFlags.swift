//
//  CountryFlags.swift
//  FetchRecipes
//
//  Created by Mahanaz Atiqullah on 11/8/24.
//

import Foundation

enum CountryFlags: String, CaseIterable {
    
    init(forCountry: String) {
        for flag in CountryFlags.allCases {
            if flag.rawValue.lowercased() == forCountry.lowercased() {
                self = flag
                return
            }
        }
        self = CountryFlags._undefined
    }
    
    case British
    case Malaysian
    case American
    case Canadian
    case Italian
    case Tunisian
    case French
    case Greek
    case Polish
    case Portuguese
    case Russian
    case Croatian
    case _undefined
 
    func asEmojiString() -> String {
        switch self {
        case .British:
            return "ğŸ‡¬ğŸ‡§"
        case .Malaysian:
            return "ğŸ‡²ğŸ‡¾"
        case .American:
            return "ğŸ‡ºğŸ‡¸"
        case .Canadian:
            return "ğŸ‡¨ğŸ‡¦"
        case .Italian:
            return "ğŸ‡®ğŸ‡¹"
        case .Tunisian:
            return "ğŸ‡¹ğŸ‡³"
        case .French:
            return "ğŸ‡«ğŸ‡·"
        case .Greek:
            return "ğŸ‡¬ğŸ‡·"
        case .Polish:
            return "ğŸ‡µğŸ‡±"
        case .Portuguese:
            return "ğŸ‡µğŸ‡¹"
        case .Russian:
            return "ğŸ‡·ğŸ‡º"
        case .Croatian:
            return "ğŸ‡­ğŸ‡·"
        case ._undefined:
            return "NIL"
        }
    }
    
//    func getCountryFlag(_ forCountry: String) -> CountryFlags {
//        for flag in CountryFlags.allCases {
//            if flag.rawValue.prefix(3) == forCountry.prefix(3) {
//                return flag
//            }
//        }
//        return CountryFlags._undefined
//    }
    
}

//= "ğŸ‡¬ğŸ‡§"
//= "ğŸ‡²ğŸ‡¾"
//= "ğŸ‡ºğŸ‡¸"
//= "ğŸ‡¨ğŸ‡¦"
//= "ğŸ‡®ğŸ‡¹"
//= "ğŸ‡¹ğŸ‡³"
//= "ğŸ‡«ğŸ‡·"
//= "ğŸ‡¬ğŸ‡·"
//= "ğŸ‡µğŸ‡±"
//= "ğŸ‡µğŸ‡¹"
//= "ğŸ‡·ğŸ‡º"
//= "ğŸ‡­ğŸ‡·"
